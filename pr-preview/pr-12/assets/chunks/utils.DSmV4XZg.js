function u(t,o,n={}){const e={type:"Feature"};return(n.id===0||n.id)&&(e.id=n.id),n.bbox&&(e.bbox=n.bbox),e.properties=o||{},e.geometry=t,e}function f(t,o,n={}){for(const r of t){if(r.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");if(r[r.length-1].length!==r[0].length)throw new Error("First and last Position are not equivalent.");for(let i=0;i<r[r.length-1].length;i++)if(r[r.length-1][i]!==r[0][i])throw new Error("First and last Position are not equivalent.")}return u({type:"Polygon",coordinates:t},o,n)}function l(t,o={}){const n=Number(t[0]),e=Number(t[1]),r=Number(t[2]),i=Number(t[3]);if(t.length===6)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");const s=[n,e];return f([[s,[r,e],[r,i],[n,i],s]],o.properties,{bbox:t,id:o.id})}const g=t=>["feature","features"].some(o=>(t==null?void 0:t.format)===o),p=t=>["polygon","polygons"].includes(t==null?void 0:t.format),y=t=>["point","points"].includes(t==null?void 0:t.format),d=t=>["bounding-boxes","bounding-box"].includes(t==null?void 0:t.format),b=t=>["lines","line"].includes(t==null?void 0:t.format),a=t=>(t==null?void 0:t.type)==="wkt",j=t=>(t==null?void 0:t.type)==="geojson",N=t=>["bounding-boxes","polygons","features","points","lines"].includes(t==null?void 0:t.format),x=t=>g(t)||p(t)||d(t)||y(t)||b(t);function E(t,o){Object.keys(o).forEach(n=>{n.includes("-")?t.setAttribute(n,o[n]):t[n]=o[n]})}const A=(t,o)=>{if(!t||!o)return!1;switch(o){case"string":return typeof t=="string";case"number":return!isNaN(t);case"boolean":return typeof t=="boolean";case"array":return Array.isArray(t);case"object":return typeof t=="object"&&!!Object.keys(t).length}return!1},L=t=>t.length<1?[]:t.map(o=>l(o));export{y as a,d as b,p as c,j as d,a as e,g as f,N as g,L as h,b as i,x as j,A as k,E as s};
